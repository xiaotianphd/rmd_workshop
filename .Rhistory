kable(meta, format="markdown")
### Bioconductor and CRAN libraries used
library(knitr)
library(ggplot2)
### Bioconductor and CRAN libraries used
library(knitr)
library(ggplot2)
### Load data
In addition to the normalized expression data, we need to make sure we have the appropriate metadata information loaded.
```{r load_data}
data <- read.csv("data/counts.rpkm.csv", header=T, row.names=1)
meta <- read.csv("data/mouse_exp_design.csv", header=T, row.names=1)
kable(meta, format="markdown")
data <- read.csv("data/counts.rpkm.csv", header=T, row.names=1)
meta <- read.csv("data/mouse_exp_design.csv", header=T, row.names=1)
kable(meta, format="markdown")
### Modify the metadata data frame
The original metadata file did not have the average expression for each sample. So we will use the counts data to generate that information and add it to the metadata data frame along with the age of the mice (in days).
```{r data-ordering}
# Ensure that sample names in data columns are in the same order as the sameple names in the meta rows
data_ordered <- data[ ,match(rownames(meta), colnames(data))]
head(data_ordered)
# Ensure that sample names in data columns are in the same order as the sameple names in the meta rows
data_ordered <- data[ ,match(rownames(meta), colnames(data))]
head(data_ordered)
### Generate samples means for the data
```{r}
# generate samplemeans for the data
samplemeans <- apply(data_ordered, 2, mean)
# Create a numeric vector with ages to add to meta (Note that there are 12 elements here)
age_in_days <- c(40, 32, 38, 35, 41, 32, 34, 26, 28, 28, 30, 32)
library(tidyverse)
library(pheatmap)
library(tidyverse)
library(pheatmap)
## Load data
```{r}
load("data/Rmarkdown_data.Rdata")
```
load("data/Rmarkdown_data.Rdata")
top20_sigOE_genes <- res_tableOE_tb %>%
arrange(padj) %>% 	#Arrange rows by padj values
pull(gene) %>% 		#Extract character vector of ordered genes
head(n=20)
top20_sigOE_norm <- normalized_counts %>%
filter(gene %in% top20_sigOE_genes)
gathered_top20_sigOE <- top20_sigOE_norm %>%
gather(colnames(top20_sigOE_norm)[2:9], key = "samplename", value = "normalized_counts")
gathered_top20_sigOE <- inner_join(mov10_meta, gathered_top20_sigOE)
ggplot(gathered_top20_sigOE) +
geom_point(aes(x = gene, y = normalized_counts, color = sampletype)) +
scale_y_log10() +
xlab("Genes") +
ylab("log10 Normalized Counts") +
ggtitle("Top 20 Significant DE Genes") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(hjust = 0.5))
res_tableOE_tb_sig <- res_tableOE_tb %>%
filter(padj < 0.05)
norm_OEsig <- normalized_counts %>%
filter(gene %in% res_tableOE_tb_sig$gene)
meta <- mov10_meta %>%
column_to_rownames("samplename") %>%
data.frame()
pheatmap(norm_OEsig[2:9],
cluster_rows = T,
show_rownames = F,
annotation = meta,
border_color = NA,
fontsize = 10,
scale = "row",
fontsize_row = 10,
height = 20)
ggplot(gathered_top20_sigOE) +
geom_point(aes(x = gene, y = normalized_counts, color = sampletype)) +
scale_y_log10() +
xlab("Genes") +
ylab("log10 Normalized Counts") +
ggtitle("Top 20 Significant DE Genes") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(hjust = 0.5))
